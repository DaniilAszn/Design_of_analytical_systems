import streamlit as st
import time
import joblib
import pandas as pd

# Setting
st.set_page_config(page_title="Classification cars", page_icon=":üöò:")


model = joblib.load('Baseline_SVM.pkl')


st.title("–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è")


st.subheader("–í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö:")
param1 = st.number_input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—Å—ã (–≤ –∫–≥)", min_value=750.0, max_value=3500.0)
param1 = (param1 - 2000) / 990
param2 = st.number_input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ (–≤ –∫–º/—á)", min_value=80.0, max_value=300.0)
param2 = (param2 - 176) / 39


st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
if st.button("–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç"):
    input_features = pd.DataFrame({
        '–ü–æ–ª–Ω–∞—è –º–∞—Å—Å–∞ [–∫–≥]': [param1],
        '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å [–∫–º/—á]': [param2]
    })


    prediction = model.predict(input_features)[0]
    probability = round(max(model.predict_proba(input_features)[0]), 5)


    col1, _ = st.columns([1, 1])

    progress_bar = col1.progress(0)
    for perc_completed in range(100):
        time.sleep(0.03)
        progress_bar.progress(perc_completed + 1)
    col1.success("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")


    with st.spinner("–ú–æ–¥–µ–ª—å –≥–æ—Ç–æ–≤–∏—Ç –æ—Ç–≤–µ—Ç, –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å"):
        time.sleep(10)


    st.write(f"–¢–∏–ø –∫—É–∑–æ–≤–∞: {prediction}")
    st.write(f"–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏ –≤ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏: {probability * 100}%")

    col2, _ = st.columns([1, 1])
    col2.success('–ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∞ –æ—Ç–≤–µ—Ç!')
